name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23.x

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run unit tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Run integration tests
      run: go test -tags=integration -v ./...

    - name: Check test coverage
      run: |
        go tool cover -func=coverage.out
        COVERAGE=$(go tool cover -func=coverage.out | grep total: | awk '{print $3}' | sed 's/%//')
        echo "Test coverage: $COVERAGE%"
        if awk "BEGIN {exit !($COVERAGE < 50.0)}"; then
          echo "Error: Test coverage is below 50%"
          exit 1
        fi

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23.x

    - name: Download dependencies
      run: go mod download

    - name: Build for Linux
      run: go build -o tips-linux .

    - name: Test binary execution
      run: |
        ./tips-linux --version
        ./tips-linux --help

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23.x

    - name: Download dependencies
      run: go mod download

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m

  homebrew-test:
    name: Homebrew Compatibility Test
    runs-on: macos-latest
    needs: [test, build]
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23.x

    - name: Download dependencies
      run: go mod download

    - name: Build for macOS
      run: go build -o tips .

    - name: Test binary on macOS
      run: |
        ./tips --version
        ./tips --help
        ./tips clear --help
        ./tips generate --help
        ./tips show --help

    - name: Test installation path
      run: |
        mkdir -p /tmp/homebrew-test/bin
        cp tips /tmp/homebrew-test/bin/
        /tmp/homebrew-test/bin/tips --version